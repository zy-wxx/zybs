// Generated by the protocol buffer compiler. DO NOT EDIT!
// source: chat.proto

// Generated files should ignore deprecation warnings
@file:Suppress("DEPRECATION")

import com.example.aaaaaac.proto.Chat

@kotlin.jvm.JvmName("-initializemsg")
public inline fun msg(block: MsgKt.Dsl.() -> kotlin.Unit): Chat.Msg =
  MsgKt.Dsl._create(Chat.Msg.newBuilder()).apply { block() }._build()
/**
 * Protobuf type `Msg`
 */
public object MsgKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: Chat.Msg.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: Chat.Msg.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): Chat.Msg = _builder.build()

    /**
     * ```
     *from uid
     * ```
     *
     * `string from_id = 1;`
     */
    public var fromId: kotlin.String
      @JvmName("getFromId")
      get() = _builder.getFromId()
      @JvmName("setFromId")
      set(value) {
        _builder.setFromId(value)
      }
    /**
     * ```
     *from uid
     * ```
     *
     * `string from_id = 1;`
     */
    public fun clearFromId() {
      _builder.clearFromId()
    }

    /**
     * ```
     *to uid
     * ```
     *
     * `string to_id = 2;`
     */
    public var toId: kotlin.String
      @JvmName("getToId")
      get() = _builder.getToId()
      @JvmName("setToId")
      set(value) {
        _builder.setToId(value)
      }
    /**
     * ```
     *to uid
     * ```
     *
     * `string to_id = 2;`
     */
    public fun clearToId() {
      _builder.clearToId()
    }

    /**
     * ```
     *username
     * ```
     *
     * `optional string name = 3;`
     */
    public var name: kotlin.String
      @JvmName("getName")
      get() = _builder.getName()
      @JvmName("setName")
      set(value) {
        _builder.setName(value)
      }
    /**
     * ```
     *username
     * ```
     *
     * `optional string name = 3;`
     */
    public fun clearName() {
      _builder.clearName()
    }
    /**
     * ```
     *username
     * ```
     *
     * `optional string name = 3;`
     * @return Whether the name field is set.
     */
    public fun hasName(): kotlin.Boolean {
      return _builder.hasName()
    }

    /**
     * ```
     *content type, which help to identify msg type
     * ```
     *
     * `.Msg.ContentType type = 4;`
     */
    public var type: Chat.Msg.ContentType
      @JvmName("getType")
      get() = _builder.getType()
      @JvmName("setType")
      set(value) {
        _builder.setType(value)
      }
    public var typeValue: kotlin.Int
      @JvmName("getTypeValue")
      get() = _builder.getTypeValue()
      @JvmName("setTypeValue")
      set(value) {
        _builder.setTypeValue(value)
      }
    /**
     * ```
     *content type, which help to identify msg type
     * ```
     *
     * `.Msg.ContentType type = 4;`
     */
    public fun clearType() {
      _builder.clearType()
    }

    /**
     * `.TextMsg text_msg = 5;`
     */
    public var textMsg: Chat.TextMsg
      @JvmName("getTextMsg")
      get() = _builder.getTextMsg()
      @JvmName("setTextMsg")
      set(value) {
        _builder.setTextMsg(value)
      }
    /**
     * `.TextMsg text_msg = 5;`
     */
    public fun clearTextMsg() {
      _builder.clearTextMsg()
    }
    /**
     * `.TextMsg text_msg = 5;`
     * @return Whether the textMsg field is set.
     */
    public fun hasTextMsg(): kotlin.Boolean {
      return _builder.hasTextMsg()
    }

    /**
     * `.AudioMsg audio_msg = 6;`
     */
    public var audioMsg: Chat.AudioMsg
      @JvmName("getAudioMsg")
      get() = _builder.getAudioMsg()
      @JvmName("setAudioMsg")
      set(value) {
        _builder.setAudioMsg(value)
      }
    /**
     * `.AudioMsg audio_msg = 6;`
     */
    public fun clearAudioMsg() {
      _builder.clearAudioMsg()
    }
    /**
     * `.AudioMsg audio_msg = 6;`
     * @return Whether the audioMsg field is set.
     */
    public fun hasAudioMsg(): kotlin.Boolean {
      return _builder.hasAudioMsg()
    }

    /**
     * `.ReqMsg req = 7;`
     */
    public var req: Chat.ReqMsg
      @JvmName("getReq")
      get() = _builder.getReq()
      @JvmName("setReq")
      set(value) {
        _builder.setReq(value)
      }
    /**
     * `.ReqMsg req = 7;`
     */
    public fun clearReq() {
      _builder.clearReq()
    }
    /**
     * `.ReqMsg req = 7;`
     * @return Whether the req field is set.
     */
    public fun hasReq(): kotlin.Boolean {
      return _builder.hasReq()
    }

    /**
     * `.RspMsg rsp = 8;`
     */
    public var rsp: Chat.RspMsg
      @JvmName("getRsp")
      get() = _builder.getRsp()
      @JvmName("setRsp")
      set(value) {
        _builder.setRsp(value)
      }
    /**
     * `.RspMsg rsp = 8;`
     */
    public fun clearRsp() {
      _builder.clearRsp()
    }
    /**
     * `.RspMsg rsp = 8;`
     * @return Whether the rsp field is set.
     */
    public fun hasRsp(): kotlin.Boolean {
      return _builder.hasRsp()
    }
    public val payloadCase: Chat.Msg.PayloadCase
      @JvmName("getPayloadCase")
      get() = _builder.getPayloadCase()

    public fun clearPayload() {
      _builder.clearPayload()
    }
  }
}
@kotlin.jvm.JvmSynthetic
public inline fun Chat.Msg.copy(block: MsgKt.Dsl.() -> kotlin.Unit): Chat.Msg =
  MsgKt.Dsl._create(this.toBuilder()).apply { block() }._build()

public val Chat.MsgOrBuilder.textMsgOrNull: Chat.TextMsg?
  get() = if (hasTextMsg()) getTextMsg() else null

public val Chat.MsgOrBuilder.audioMsgOrNull: Chat.AudioMsg?
  get() = if (hasAudioMsg()) getAudioMsg() else null

public val Chat.MsgOrBuilder.reqOrNull: Chat.ReqMsg?
  get() = if (hasReq()) getReq() else null

public val Chat.MsgOrBuilder.rspOrNull: Chat.RspMsg?
  get() = if (hasRsp()) getRsp() else null

