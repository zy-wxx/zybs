// Generated by the protocol buffer compiler. DO NOT EDIT!
// source: chat.proto

// Generated files should ignore deprecation warnings
@file:Suppress("DEPRECATION")

import com.example.aaaaaac.proto.Chat

@kotlin.jvm.JvmName("-initializerspMsg")
public inline fun rspMsg(block: RspMsgKt.Dsl.() -> kotlin.Unit): Chat.RspMsg =
  RspMsgKt.Dsl._create(Chat.RspMsg.newBuilder()).apply { block() }._build()
/**
 * Protobuf type `RspMsg`
 */
public object RspMsgKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: Chat.RspMsg.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: Chat.RspMsg.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): Chat.RspMsg = _builder.build()

    /**
     * `.RspMsg.Code code = 1;`
     */
    public var code: Chat.RspMsg.Code
      @JvmName("getCode")
      get() = _builder.getCode()
      @JvmName("setCode")
      set(value) {
        _builder.setCode(value)
      }
    public var codeValue: kotlin.Int
      @JvmName("getCodeValue")
      get() = _builder.getCodeValue()
      @JvmName("setCodeValue")
      set(value) {
        _builder.setCodeValue(value)
      }
    /**
     * `.RspMsg.Code code = 1;`
     */
    public fun clearCode() {
      _builder.clearCode()
    }

    /**
     * `.RspMsg.Status status = 2;`
     */
    public var status: Chat.RspMsg.Status
      @JvmName("getStatus")
      get() = _builder.getStatus()
      @JvmName("setStatus")
      set(value) {
        _builder.setStatus(value)
      }
    public var statusValue: kotlin.Int
      @JvmName("getStatusValue")
      get() = _builder.getStatusValue()
      @JvmName("setStatusValue")
      set(value) {
        _builder.setStatusValue(value)
      }
    /**
     * `.RspMsg.Status status = 2;`
     */
    public fun clearStatus() {
      _builder.clearStatus()
    }

    /**
     * An uninstantiable, behaviorless type to represent the field in
     * generics.
     */
    @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
    public class KvProxy private constructor() : com.google.protobuf.kotlin.DslProxy()
    /**
     * `map<string, string> kv = 3;`
     */
     public val kv: com.google.protobuf.kotlin.DslMap<kotlin.String, kotlin.String, KvProxy>
      @kotlin.jvm.JvmSynthetic
      @JvmName("getKvMap")
      get() = com.google.protobuf.kotlin.DslMap(
        _builder.getKvMap()
      )
    /**
     * `map<string, string> kv = 3;`
     */
    @JvmName("putKv")
    public fun com.google.protobuf.kotlin.DslMap<kotlin.String, kotlin.String, KvProxy>
      .put(key: kotlin.String, value: kotlin.String) {
         _builder.putKv(key, value)
       }
    /**
     * `map<string, string> kv = 3;`
     */
    @kotlin.jvm.JvmSynthetic
    @JvmName("setKv")
    @Suppress("NOTHING_TO_INLINE")
    public inline operator fun com.google.protobuf.kotlin.DslMap<kotlin.String, kotlin.String, KvProxy>
      .set(key: kotlin.String, value: kotlin.String) {
         put(key, value)
       }
    /**
     * `map<string, string> kv = 3;`
     */
    @kotlin.jvm.JvmSynthetic
    @JvmName("removeKv")
    public fun com.google.protobuf.kotlin.DslMap<kotlin.String, kotlin.String, KvProxy>
      .remove(key: kotlin.String) {
         _builder.removeKv(key)
       }
    /**
     * `map<string, string> kv = 3;`
     */
    @kotlin.jvm.JvmSynthetic
    @JvmName("putAllKv")
    public fun com.google.protobuf.kotlin.DslMap<kotlin.String, kotlin.String, KvProxy>
      .putAll(map: kotlin.collections.Map<kotlin.String, kotlin.String>) {
         _builder.putAllKv(map)
       }
    /**
     * `map<string, string> kv = 3;`
     */
    @kotlin.jvm.JvmSynthetic
    @JvmName("clearKv")
    public fun com.google.protobuf.kotlin.DslMap<kotlin.String, kotlin.String, KvProxy>
      .clear() {
         _builder.clearKv()
       }
  }
}
@kotlin.jvm.JvmSynthetic
public inline fun Chat.RspMsg.copy(block: RspMsgKt.Dsl.() -> kotlin.Unit): Chat.RspMsg =
  RspMsgKt.Dsl._create(this.toBuilder()).apply { block() }._build()

